var documenterSearchIndex = {"docs":
[{"location":"404/#Page-Not-Found","page":"Page Not Found","title":"Page Not Found","text":"","category":"section"},{"location":"404/","page":"Page Not Found","title":"Page Not Found","text":"The page you are looking for does not exist.","category":"page"},{"location":"404/#Helpful-Links","page":"Page Not Found","title":"Helpful Links","text":"","category":"section"},{"location":"404/","page":"Page Not Found","title":"Page Not Found","text":"Home\nDocumentation\nGitHub Repository\nReport an Issue ","category":"page"},{"location":"examples/patterns/#Patterns-and-Colimits","page":"Patterns and Colimits","title":"Patterns and Colimits","text":"","category":"section"},{"location":"examples/patterns/","page":"Patterns and Colimits","title":"Patterns and Colimits","text":"This page demonstrates how to work with patterns and colimits in MES.","category":"page"},{"location":"examples/patterns/#Basic-Pattern-Creation","page":"Patterns and Colimits","title":"Basic Pattern Creation","text":"","category":"section"},{"location":"examples/patterns/","page":"Patterns and Colimits","title":"Patterns and Colimits","text":"using MES\n\n# Create a simple pattern\npattern = create_pattern(\n    [\"A\", \"B\", \"C\"],\n    [(\"A\", \"B\"), (\"B\", \"C\")]\n)\n\n# Calculate colimit\ncolimit = calculate_colimit(pattern)","category":"page"},{"location":"examples/patterns/#Pattern-Recognition","page":"Patterns and Colimits","title":"Pattern Recognition","text":"","category":"section"},{"location":"examples/patterns/","page":"Patterns and Colimits","title":"Patterns and Colimits","text":"# Create a pattern recognition system\nsystem = create_pattern_recognition_system(\n    threshold=0.7,\n    decay_rate=0.1\n)\n\n# Add known patterns\nadd_pattern!(system, [\"X\", \"Y\", \"Z\"], \"Triangle\")\nadd_pattern!(system, [\"A\", \"B\"], \"Line\")\n\n# Recognize patterns\ntransactions = [\n    (\"X\", \"Y\", 1.0),\n    (\"Y\", \"Z\", 1.0),\n    (\"Z\", \"X\", 1.0)\n]\n\npatterns = recognize_patterns(system, transactions)","category":"page"},{"location":"examples/patterns/#Pattern-Evolution","page":"Patterns and Colimits","title":"Pattern Evolution","text":"","category":"section"},{"location":"examples/patterns/","page":"Patterns and Colimits","title":"Patterns and Colimits","text":"# Create a pattern evolution system\nevolution = create_pattern_evolution_system()\n\n# Define initial patterns\ninitial_patterns = [\n    Pattern([\"A\", \"B\"], \"Simple\"),\n    Pattern([\"B\", \"C\"], \"Simple\"),\n    Pattern([\"A\", \"B\", \"C\"], \"Complex\")\n]\n\n# Simulate evolution\nresults = simulate_evolution(evolution, initial_patterns)","category":"page"},{"location":"examples/patterns/","page":"Patterns and Colimits","title":"Patterns and Colimits","text":"","category":"page"},{"location":"examples/categories/#Category-Examples","page":"Categories","title":"Category Examples","text":"","category":"section"},{"location":"examples/categories/","page":"Categories","title":"Categories","text":"This chapter provides practical examples of using categories in Memory Evolutive Systems.","category":"page"},{"location":"examples/categories/#Basic-Category-Creation","page":"Categories","title":"Basic Category Creation","text":"","category":"section"},{"location":"examples/categories/","page":"Categories","title":"Categories","text":"Let's start with creating a simple category:","category":"page"},{"location":"examples/categories/","page":"Categories","title":"Categories","text":"using MES\n\n# Create a graph with neurons and connections\ngraph = create_graph([\n    \"Neuron1\", \"Neuron2\", \"Assembly\"\n], [\n    (\"Neuron1\", \"Neuron2\", \"synapse\"),\n    (\"Neuron2\", \"Assembly\", \"activation\")\n])\n\n# Convert to category\ncat = create_category(graph)\n\n# Add composition\nadd_composition!(cat, \"synapse\", \"activation\", \"process\")\n\n# Verify category structure\nis_valid = verify_category(cat)","category":"page"},{"location":"examples/categories/#Biological-System-Example","page":"Categories","title":"Biological System Example","text":"","category":"section"},{"location":"examples/categories/","page":"Categories","title":"Categories","text":"Modeling a cell and its components:","category":"page"},{"location":"examples/categories/","page":"Categories","title":"Categories","text":"# Create a configuration category for a cell\ncell = configuration_category([\n    \"Nucleus\", \"Mitochondria\", \"CellMembrane\"\n], [\n    (\"Nucleus\", \"Mitochondria\", \"energy_transfer\"),\n    (\"Mitochondria\", \"CellMembrane\", \"transport\")\n])\n\n# Model cell division\ndaughter_cell = configuration_category([\n    \"DaughterNucleus\", \"DaughterMitochondria\", \"DaughterMembrane\"\n], [\n    (\"DaughterNucleus\", \"DaughterMitochondria\", \"energy_transfer\"),\n    (\"DaughterMitochondria\", \"DaughterMembrane\", \"transport\")\n])\n\n# Create a functor representing division\ndivision = functor(cell, daughter_cell, Dict(\n    \"Nucleus\" => \"DaughterNucleus\",\n    \"Mitochondria\" => \"DaughterMitochondria\",\n    \"CellMembrane\" => \"DaughterMembrane\"\n))","category":"page"},{"location":"examples/categories/#Neural-Network-Example","page":"Categories","title":"Neural Network Example","text":"","category":"section"},{"location":"examples/categories/","page":"Categories","title":"Categories","text":"Modeling a simple neural network:","category":"page"},{"location":"examples/categories/","page":"Categories","title":"Categories","text":"# Create a labeled category for the network\nnetwork = labeled_category([\n    \"Input\", \"Hidden\", \"Output\"\n], [\n    (\"Input\", \"Hidden\", \"weight1\"),\n    (\"Hidden\", \"Output\", \"weight2\")\n], [\"weight1\", \"weight2\"])\n\n# Add learning rules as compositions\nadd_composition!(network, \"weight1\", \"weight2\", \"forward_prop\")\nadd_composition!(network, \"weight2\", \"weight1\", \"back_prop\")","category":"page"},{"location":"examples/categories/#Social-Network-Example","page":"Categories","title":"Social Network Example","text":"","category":"section"},{"location":"examples/categories/","page":"Categories","title":"Categories","text":"Modeling social relationships:","category":"page"},{"location":"examples/categories/","page":"Categories","title":"Categories","text":"# Create a category with generators\nsocial = category_generators([\n    \"Person\", \"Group\", \"Organization\"\n], [\n    (\"Person\", \"Group\", \"member\"),\n    (\"Group\", \"Organization\", \"affiliate\")\n])\n\n# Add social interaction rules\nadd_composition!(social, \"member\", \"affiliate\", \"participate\")","category":"page"},{"location":"examples/categories/#Further-Reading","page":"Categories","title":"Further Reading","text":"","category":"section"},{"location":"examples/categories/","page":"Categories","title":"Categories","text":"For more information about categories in MES, refer to:","category":"page"},{"location":"examples/categories/","page":"Categories","title":"Categories","text":"Category Theory\nPatterns\nMemory Systems ","category":"page"},{"location":"examples/bill_of_exchange/#Bill-of-Exchange-System","page":"Bill of Exchange System","title":"Bill of Exchange System","text":"","category":"section"},{"location":"examples/bill_of_exchange/","page":"Bill of Exchange System","title":"Bill of Exchange System","text":"This example demonstrates a complete bill of exchange (BOE) transaction in a double-entry system with multiple agents, including discounting and transaction logging.","category":"page"},{"location":"examples/bill_of_exchange/#System-Components","page":"Bill of Exchange System","title":"System Components","text":"","category":"section"},{"location":"examples/bill_of_exchange/#Types-and-Structures","page":"Bill of Exchange System","title":"Types and Structures","text":"","category":"section"},{"location":"examples/bill_of_exchange/","page":"Bill of Exchange System","title":"Bill of Exchange System","text":"struct Transaction\n    id::String\n    timestamp::DateTime\n    description::String\n    amount::Float64\n    from_account::String\n    to_account::String\n    discount_rate::Float64\n    maturity_date::DateTime\n    present_value::Float64\nend\n\nstruct TransactionLog\n    transactions::Vector{Transaction}\nend","category":"page"},{"location":"examples/bill_of_exchange/#Discounting-Functions","page":"Bill of Exchange System","title":"Discounting Functions","text":"","category":"section"},{"location":"examples/bill_of_exchange/","page":"Bill of Exchange System","title":"Bill of Exchange System","text":"function calculate_present_value(future_value::Float64, rate::Float64, time_to_maturity::Float64)\n    return future_value / (1 + rate * time_to_maturity)\nend\n\nfunction calculate_discount(future_value::Float64, present_value::Float64)\n    return future_value - present_value\nend","category":"page"},{"location":"examples/bill_of_exchange/#Agents-and-Accounts","page":"Bill of Exchange System","title":"Agents and Accounts","text":"","category":"section"},{"location":"examples/bill_of_exchange/#1.-Seller-(S)","page":"Bill of Exchange System","title":"1. Seller (S)","text":"","category":"section"},{"location":"examples/bill_of_exchange/","page":"Bill of Exchange System","title":"Bill of Exchange System","text":"Products (inventory)\nReceivables\nBank account at bankS\nDiscount account","category":"page"},{"location":"examples/bill_of_exchange/#2.-Buyer-(B)","page":"Bill of Exchange System","title":"2. Buyer (B)","text":"","category":"section"},{"location":"examples/bill_of_exchange/","page":"Bill of Exchange System","title":"Bill of Exchange System","text":"Products (inventory)\nPayables\nBank account at bankB\nDiscount account","category":"page"},{"location":"examples/bill_of_exchange/#3.-Seller's-Bank-(bankS)","page":"Bill of Exchange System","title":"3. Seller's Bank (bankS)","text":"","category":"section"},{"location":"examples/bill_of_exchange/","page":"Bill of Exchange System","title":"Bill of Exchange System","text":"Assets\nLiabilities\nReserves at CB\nDiscount account","category":"page"},{"location":"examples/bill_of_exchange/#4.-Buyer's-Bank-(bankB)","page":"Bill of Exchange System","title":"4. Buyer's Bank (bankB)","text":"","category":"section"},{"location":"examples/bill_of_exchange/","page":"Bill of Exchange System","title":"Bill of Exchange System","text":"Assets\nLiabilities\nReserves at CB\nDiscount account","category":"page"},{"location":"examples/bill_of_exchange/#5.-Central-Bank-(CB)","page":"Bill of Exchange System","title":"5. Central Bank (CB)","text":"","category":"section"},{"location":"examples/bill_of_exchange/","page":"Bill of Exchange System","title":"Bill of Exchange System","text":"Assets\nLiabilities (reserves)\nMoney supply\nDiscount account","category":"page"},{"location":"examples/bill_of_exchange/#Transaction-Flow-with-Discounting","page":"Bill of Exchange System","title":"Transaction Flow with Discounting","text":"","category":"section"},{"location":"examples/bill_of_exchange/#1.-BOE-Creation","page":"Bill of Exchange System","title":"1. BOE Creation","text":"","category":"section"},{"location":"examples/bill_of_exchange/","page":"Bill of Exchange System","title":"Bill of Exchange System","text":"# Create receivables and payables with present value\npv = calculate_present_value(initial_amount, rate, maturity_months/12)\n\"create_boe\" => (\n    (\"S_receivables\", \"B_payables\"),\n    (amount, rate, time) -> calculate_present_value(amount, rate, time)\n)","category":"page"},{"location":"examples/bill_of_exchange/#2.-Bank-Acceptance-with-Discounting","page":"Bill of Exchange System","title":"2. Bank Acceptance with Discounting","text":"","category":"section"},{"location":"examples/bill_of_exchange/","page":"Bill of Exchange System","title":"Bill of Exchange System","text":"# Bank accepts BOE with discount calculation\npv, discount = calculate_present_value(initial_amount, rate, maturity_months/12),\n              calculate_discount(initial_amount, pv)\n\"bankS_accept\" => (\n    (\"bankS_liabilities\", \"S_receivables\"),\n    (amount, rate, time) -> begin\n        pv = calculate_present_value(amount, rate, time)\n        discount = calculate_discount(amount, pv)\n        (pv, discount)\n    end\n)","category":"page"},{"location":"examples/bill_of_exchange/#3.-Monthly-Transfers","page":"Bill of Exchange System","title":"3. Monthly Transfers","text":"","category":"section"},{"location":"examples/bill_of_exchange/","page":"Bill of Exchange System","title":"Bill of Exchange System","text":"# Monthly transfers with present value calculation\ntransfer_amount = initial_amount / maturity_months\npv = calculate_present_value(transfer_amount, rate, (maturity_months - i)/12)","category":"page"},{"location":"examples/bill_of_exchange/#4.-Final-Settlement","page":"Bill of Exchange System","title":"4. Final Settlement","text":"","category":"section"},{"location":"examples/bill_of_exchange/","page":"Bill of Exchange System","title":"Bill of Exchange System","text":"# Settlement with present value at maturity\npv = calculate_present_value(initial_amount, rate, 0)","category":"page"},{"location":"examples/bill_of_exchange/#Running-the-Example","page":"Bill of Exchange System","title":"Running the Example","text":"","category":"section"},{"location":"examples/bill_of_exchange/","page":"Bill of Exchange System","title":"Bill of Exchange System","text":"using MES\n\n# Run example with default parameters\nfinal_state, transaction_log = run_boe_example(\n    initial_amount = 10000.0,  # BOE amount\n    rate = 0.05,              # Discount rate\n    maturity_months = 6        # Time to maturity\n)\n\n# Print transaction log\nprintln(\"\\nTransaction Log:\")\nfor t in transaction_log.transactions\n    println(\"$(t.timestamp): $(t.description)\")\n    println(\"  Amount: $(t.amount)\")\n    println(\"  Present Value: $(t.present_value)\")\n    println(\"  From: $(t.from_account)\")\n    println(\"  To: $(t.to_account)\")\n    println(\"  Rate: $(t.discount_rate)\")\n    println(\"  Maturity: $(t.maturity_date)\")\n    println()\nend","category":"page"},{"location":"examples/bill_of_exchange/#MES-Interpretation","page":"Bill of Exchange System","title":"MES Interpretation","text":"","category":"section"},{"location":"examples/bill_of_exchange/","page":"Bill of Exchange System","title":"Bill of Exchange System","text":"This example demonstrates how MES can model complex financial transactions with:","category":"page"},{"location":"examples/bill_of_exchange/#1.-Category-Structure","page":"Bill of Exchange System","title":"1. Category Structure","text":"","category":"section"},{"location":"examples/bill_of_exchange/","page":"Bill of Exchange System","title":"Bill of Exchange System","text":"Objects represent accounts\nMorphisms represent transactions with lambda functions for calculations\nPatterns represent transaction sequences","category":"page"},{"location":"examples/bill_of_exchange/#2.-Time-Evolution","page":"Bill of Exchange System","title":"2. Time Evolution","text":"","category":"section"},{"location":"examples/bill_of_exchange/","page":"Bill of Exchange System","title":"Bill of Exchange System","text":"Transactions are timestamped\nPresent values are calculated based on time to maturity\nMultiple transfers over the 6-month period","category":"page"},{"location":"examples/bill_of_exchange/#3.-Documentation-and-Logging","page":"Bill of Exchange System","title":"3. Documentation and Logging","text":"","category":"section"},{"location":"examples/bill_of_exchange/","page":"Bill of Exchange System","title":"Bill of Exchange System","text":"Each transaction is logged with full details\nPresent values and discounts are tracked\nTransaction sequence is preserved","category":"page"},{"location":"examples/bill_of_exchange/#4.-Double-Entry-System","page":"Bill of Exchange System","title":"4. Double-Entry System","text":"","category":"section"},{"location":"examples/bill_of_exchange/","page":"Bill of Exchange System","title":"Bill of Exchange System","text":"All transactions maintain double-entry principles\nDiscount accounts track value changes\nCB operations are properly recorded","category":"page"},{"location":"examples/bill_of_exchange/#Next-Steps","page":"Bill of Exchange System","title":"Next Steps","text":"","category":"section"},{"location":"examples/bill_of_exchange/","page":"Bill of Exchange System","title":"Bill of Exchange System","text":"Check out the Theory section for mathematical details about categories and patterns in MES. ","category":"page"},{"location":"examples/synchronization/#Synchronization","page":"Synchronization","title":"Synchronization","text":"","category":"section"},{"location":"examples/synchronization/","page":"Synchronization","title":"Synchronization","text":"This page demonstrates how to work with synchronization in MES.","category":"page"},{"location":"examples/synchronization/#Basic-Synchronization","page":"Synchronization","title":"Basic Synchronization","text":"","category":"section"},{"location":"examples/synchronization/","page":"Synchronization","title":"Synchronization","text":"using MES\n\n# Create a network of oscillators\noscillators = [\n    create_oscillator(1.0, 0.1),  # frequency 1.0, coupling strength 0.1\n    create_oscillator(1.1, 0.1),\n    create_oscillator(0.9, 0.1)\n]\n\n# Create connections\nconnections = [\n    (1, 2, 0.2),  # oscillator 1 to 2 with weight 0.2\n    (2, 3, 0.2),\n    (3, 1, 0.2)\n]\n\n# Run synchronization\nhistory = simulate_synchronization(oscillators, connections, 100)","category":"page"},{"location":"examples/synchronization/#Phase-Locking","page":"Synchronization","title":"Phase Locking","text":"","category":"section"},{"location":"examples/synchronization/","page":"Synchronization","title":"Synchronization","text":"# Create two oscillators\nosc1 = create_oscillator(1.0, 0.2)\nosc2 = create_oscillator(1.0, 0.2)\n\n# Set initial phases\nset_phase!(osc1, 0.0)\nset_phase!(osc2, π/4)\n\n# Run simulation\nphases = []\nfor t in 1:100\n    update_oscillators!([osc1, osc2], [(1, 2, 0.3)])\n    push!(phases, (get_phase(osc1), get_phase(osc2)))\nend\n\n# Calculate phase locking value\nplv = calculate_plv(phases)","category":"page"},{"location":"examples/synchronization/#Co-regulation","page":"Synchronization","title":"Co-regulation","text":"","category":"section"},{"location":"examples/synchronization/","page":"Synchronization","title":"Synchronization","text":"# Create co-regulation network\nnetwork = create_co_regulation_network(\n    3,      # number of nodes\n    0.1,    # coupling strength\n    0.05    # noise level\n)\n\n# Set initial states\nstates = Dict(\n    1 => 0.8,\n    2 => 0.6,\n    3 => 0.4\n)\n\n# Run co-regulation\nhistory = simulate_co_regulation(network, states, 50)","category":"page"},{"location":"examples/synchronization/#Entrainment","page":"Synchronization","title":"Entrainment","text":"","category":"section"},{"location":"examples/synchronization/","page":"Synchronization","title":"Synchronization","text":"# Create driver and responder oscillators\ndriver = create_oscillator(1.0, 0.3)    # strong oscillator\nresponder = create_oscillator(1.2, 0.1)  # weak oscillator\n\n# Set up unidirectional coupling\ncoupling = [(1, 2, 0.4)]  # driver -> responder\n\n# Run entrainment simulation\nfrequencies = []\nfor t in 1:200\n    update_oscillators!([driver, responder], coupling)\n    push!(frequencies, (get_frequency(driver), get_frequency(responder)))\nend\n\n# Calculate entrainment measure\nentrainment = calculate_entrainment(frequencies)","category":"page"},{"location":"examples/synchronization/","page":"Synchronization","title":"Synchronization","text":"","category":"page"},{"location":"examples/momat/advanced/#Advanced-MOMAT-Examples","page":"Advanced MOMAT Examples","title":"Advanced MOMAT Examples","text":"","category":"section"},{"location":"examples/momat/advanced/","page":"Advanced MOMAT Examples","title":"Advanced MOMAT Examples","text":"This page contains advanced examples of using MES for Monetary Macro Accounting (MOMAT) modeling.","category":"page"},{"location":"examples/momat/advanced/#Complex-Financial-Networks","page":"Advanced MOMAT Examples","title":"Complex Financial Networks","text":"","category":"section"},{"location":"examples/momat/advanced/","page":"Advanced MOMAT Examples","title":"Advanced MOMAT Examples","text":"using MES\n\n# Create a complex financial network\nnetwork = create_financial_network(\n    [\"Bank1\", \"Bank2\", \"Bank3\", \"Bank4\", \"Bank5\"],\n    Dict(\n        # Interbank lending\n        (\"Bank1\", \"Bank2\") => 100.0,\n        (\"Bank2\", \"Bank3\") => 150.0,\n        (\"Bank3\", \"Bank4\") => 200.0,\n        (\"Bank4\", \"Bank5\") => 250.0,\n        (\"Bank5\", \"Bank1\") => 300.0,\n        # Cross-border exposures\n        (\"Bank1\", \"Bank3\") => 50.0,\n        (\"Bank2\", \"Bank4\") => 75.0,\n        (\"Bank3\", \"Bank5\") => 100.0\n    )\n)\n\n# Create memory component for network\nmemory = create_network_memory(network)\n\n# Simulate network evolution\nfor t in 1:10\n    update_network!(network, memory)\n    store_network_state!(memory, network, t)\nend\n\n# Analyze network structure\nmetrics = calculate_network_metrics(network)\nprintln(\"Network density: $(metrics.density)\")\nprintln(\"Average path length: $(metrics.avg_path_length)\")","category":"page"},{"location":"examples/momat/advanced/#Systemic-Risk-Analysis","page":"Advanced MOMAT Examples","title":"Systemic Risk Analysis","text":"","category":"section"},{"location":"examples/momat/advanced/","page":"Advanced MOMAT Examples","title":"Advanced MOMAT Examples","text":"# Create a systemic risk analysis system\nsystem = create_systemic_risk_system(network)\n\n# Calculate various risk metrics\nrisk_metrics = calculate_systemic_risk(system)\n\n# Analyze contagion potential\ncontagion = analyze_contagion(system)\n\n# Identify systemically important banks\nsib = identify_systemic_banks(system)\n\nprintln(\"Systemic Risk Metrics:\")\nprintln(\"Network vulnerability: $(risk_metrics.vulnerability)\")\nprintln(\"Contagion potential: $(contagion.potential)\")\nprintln(\"Systemically important banks: $(join(sib, \", \"))\")","category":"page"},{"location":"examples/momat/advanced/#Monetary-Policy-Effects","page":"Advanced MOMAT Examples","title":"Monetary Policy Effects","text":"","category":"section"},{"location":"examples/momat/advanced/","page":"Advanced MOMAT Examples","title":"Advanced MOMAT Examples","text":"# Create a monetary policy simulation system\npolicy_system = create_policy_system(network)\n\n# Define policy shocks\nshocks = [\n    PolicyShock(\"InterestRate\", -0.5, 1),  # 50bp cut at t=1\n    PolicyShock(\"ReserveRequirement\", -0.1, 5)  # 10% reduction at t=5\n]\n\n# Run policy simulation\nresults = simulate_policy_effects(policy_system, shocks)\n\n# Analyze transmission\ntransmission = analyze_policy_transmission(results)\n\nprintln(\"Policy Effects:\")\nprintln(\"Impact on lending: $(transmission.lending_impact)\")\nprintln(\"Impact on network stability: $(transmission.stability_impact)\")","category":"page"},{"location":"examples/momat/advanced/#Pattern-Formation-and-Evolution","page":"Advanced MOMAT Examples","title":"Pattern Formation and Evolution","text":"","category":"section"},{"location":"examples/momat/advanced/","page":"Advanced MOMAT Examples","title":"Advanced MOMAT Examples","text":"# Create a pattern evolution system\npattern_system = create_pattern_evolution_system(network)\n\n# Define initial patterns\ninitial_patterns = [\n    Pattern([\"Bank1\", \"Bank2\", \"Bank3\"], \"Core\"),\n    Pattern([\"Bank4\", \"Bank5\"], \"Periphery\"),\n    Pattern([\"Bank1\", \"Bank4\"], \"Cross\")\n]\n\n# Simulate pattern evolution\nevolution = simulate_pattern_evolution(pattern_system, initial_patterns)\n\n# Analyze pattern dynamics\ndynamics = analyze_pattern_dynamics(evolution)\n\nprintln(\"Pattern Evolution:\")\nprintln(\"Number of patterns: $(dynamics.num_patterns)\")\nprintln(\"Pattern stability: $(dynamics.stability)\")","category":"page"},{"location":"examples/momat/advanced/#Memory-Based-Risk-Assessment","page":"Advanced MOMAT Examples","title":"Memory-Based Risk Assessment","text":"","category":"section"},{"location":"examples/momat/advanced/","page":"Advanced MOMAT Examples","title":"Advanced MOMAT Examples","text":"# Create a memory-based risk assessment system\nrisk_system = create_memory_risk_system(network, memory)\n\n# Define risk patterns\nrisk_patterns = [\n    RiskPattern(\"HighExposure\", [\"Bank1\", \"Bank2\"], 0.8),\n    RiskPattern(\"Concentration\", [\"Bank3\", \"Bank4\"], 0.7),\n    RiskPattern(\"Interconnectedness\", [\"Bank1\", \"Bank3\", \"Bank5\"], 0.9)\n]\n\n# Assess risks using memory\nrisk_assessment = assess_risks(risk_system, risk_patterns)\n\n# Generate risk report\nreport = generate_risk_report(risk_assessment)\n\nprintln(\"Risk Assessment:\")\nprintln(\"Overall risk level: $(report.overall_risk)\")\nprintln(\"Risk patterns detected: $(length(report.patterns))\")","category":"page"},{"location":"examples/momat/advanced/","page":"Advanced MOMAT Examples","title":"Advanced MOMAT Examples","text":"","category":"page"},{"location":"examples/momat/basic/#Basic-MOMAT-Examples","page":"Basic MOMAT Examples","title":"Basic MOMAT Examples","text":"","category":"section"},{"location":"examples/momat/basic/","page":"Basic MOMAT Examples","title":"Basic MOMAT Examples","text":"This page contains basic examples of using MES for Monetary Macro Accounting (MOMAT) modeling.","category":"page"},{"location":"examples/momat/basic/#Simple-Monetary-Circuit","page":"Basic MOMAT Examples","title":"Simple Monetary Circuit","text":"","category":"section"},{"location":"examples/momat/basic/","page":"Basic MOMAT Examples","title":"Basic MOMAT Examples","text":"using MES\n\n# Create a simple monetary circuit\ncircuit = create_monetary_circuit(\n    [\"Bank\", \"Firm\", \"Household\"],\n    Dict(\n        (\"Bank\", \"Firm\") => \"Loan\",\n        (\"Firm\", \"Household\") => \"Wages\",\n        (\"Household\", \"Firm\") => \"Consumption\",\n        (\"Firm\", \"Bank\") => \"Repayment\"\n    )\n)\n\n# Set initial balances\nset_balance!(circuit, \"Bank\", 1000.0)\nset_balance!(circuit, \"Firm\", 0.0)\nset_balance!(circuit, \"Household\", 0.0)\n\n# Simulate one period\nsimulate_period!(circuit)\n\n# Print results\nprintln(\"Final balances:\")\nfor agent in get_agents(circuit)\n    println(\"$agent: $(get_balance(circuit, agent))\")\nend","category":"page"},{"location":"examples/momat/basic/#Bank-Balance-Sheets","page":"Basic MOMAT Examples","title":"Bank Balance Sheets","text":"","category":"section"},{"location":"examples/momat/basic/","page":"Basic MOMAT Examples","title":"Basic MOMAT Examples","text":"# Create a bank with assets and liabilities\nbank = create_bank(\n    \"Bank1\",\n    Dict(\n        \"Loans\" => 1000.0,\n        \"Reserves\" => 100.0\n    ),\n    Dict(\n        \"Deposits\" => 800.0,\n        \"Capital\" => 300.0\n    )\n)\n\n# Create a pattern for the balance sheet\npattern = create_balance_sheet_pattern(bank)\n\n# Calculate key ratios\nratios = calculate_ratios(bank)\nprintln(\"Capital ratio: $(ratios.capital_ratio)\")\nprintln(\"Liquidity ratio: $(ratios.liquidity_ratio)\")","category":"page"},{"location":"examples/momat/basic/#Payment-Systems","page":"Basic MOMAT Examples","title":"Payment Systems","text":"","category":"section"},{"location":"examples/momat/basic/","page":"Basic MOMAT Examples","title":"Basic MOMAT Examples","text":"# Create a payment system\nsystem = create_payment_system(\n    [\"Bank1\", \"Bank2\", \"Bank3\"],\n    Dict(\n        (\"Bank1\", \"Bank2\") => 100.0,\n        (\"Bank2\", \"Bank3\") => 150.0,\n        (\"Bank3\", \"Bank1\") => 200.0\n    )\n)\n\n# Process payments\nprocess_payments!(system)\n\n# Calculate net positions\npositions = calculate_net_positions(system)\nprintln(\"Net positions:\")\nfor (bank, position) in positions\n    println(\"$bank: $position\")\nend","category":"page"},{"location":"examples/momat/basic/#Memory-Components","page":"Basic MOMAT Examples","title":"Memory Components","text":"","category":"section"},{"location":"examples/momat/basic/","page":"Basic MOMAT Examples","title":"Basic MOMAT Examples","text":"# Create a financial memory component\nmemory = create_financial_memory(\n    capacity=100,\n    decay_rate=0.1\n)\n\n# Store transactions\nstore_transaction!(memory, \"Bank1\", \"Bank2\", 100.0, \"Payment\")\nstore_transaction!(memory, \"Bank2\", \"Bank3\", 150.0, \"Payment\")\n\n# Retrieve recent transactions\nrecent = get_recent_transactions(memory, \"Bank1\")\nprintln(\"Recent transactions for Bank1:\")\nfor t in recent\n    println(\"$(t.date): $(t.amount) to $(t.counterparty)\")\nend","category":"page"},{"location":"examples/momat/basic/#Pattern-Recognition","page":"Basic MOMAT Examples","title":"Pattern Recognition","text":"","category":"section"},{"location":"examples/momat/basic/","page":"Basic MOMAT Examples","title":"Basic MOMAT Examples","text":"# Create a pattern recognition system\nsystem = create_pattern_recognition_system(\n    threshold=0.7,\n    decay_rate=0.1\n)\n\n# Add known patterns\nadd_pattern!(system, [\"Bank1\", \"Bank2\", \"Bank3\"], \"Interbank\")\nadd_pattern!(system, [\"Firm1\", \"Bank1\", \"Household1\"], \"Credit\")\n\n# Recognize patterns in transactions\ntransactions = [\n    (\"Bank1\", \"Bank2\", 100.0),\n    (\"Bank2\", \"Bank3\", 150.0),\n    (\"Firm1\", \"Bank1\", 200.0)\n]\n\npatterns = recognize_patterns(system, transactions)\nprintln(\"Recognized patterns:\")\nfor pattern in patterns\n    println(pattern)\nend","category":"page"},{"location":"examples/momat/basic/","page":"Basic MOMAT Examples","title":"Basic MOMAT Examples","text":"","category":"page"},{"location":"appendix/category_theory/#Category-Theory-Appendix","page":"Category Theory Appendix","title":"Category Theory Appendix","text":"","category":"section"},{"location":"appendix/category_theory/","page":"Category Theory Appendix","title":"Category Theory Appendix","text":"This appendix provides a detailed mathematical treatment of category theory concepts used in Memory Evolutive Systems.","category":"page"},{"location":"appendix/category_theory/#Basic-Definitions","page":"Category Theory Appendix","title":"Basic Definitions","text":"","category":"section"},{"location":"appendix/category_theory/#Category","page":"Category Theory Appendix","title":"Category","text":"","category":"section"},{"location":"appendix/category_theory/","page":"Category Theory Appendix","title":"Category Theory Appendix","text":"A category mathcalC consists of:","category":"page"},{"location":"appendix/category_theory/","page":"Category Theory Appendix","title":"Category Theory Appendix","text":"A collection of objects textOb(mathcalC)\nA collection of morphisms textHom(mathcalC)\nFor each object A, an identity morphism 1_A\nA composition operation circ that is associative and respects identity","category":"page"},{"location":"appendix/category_theory/#Functor","page":"Category Theory Appendix","title":"Functor","text":"","category":"section"},{"location":"appendix/category_theory/","page":"Category Theory Appendix","title":"Category Theory Appendix","text":"A functor F mathcalC to mathcalD between categories consists of:","category":"page"},{"location":"appendix/category_theory/","page":"Category Theory Appendix","title":"Category Theory Appendix","text":"A map on objects: F textOb(mathcalC) to textOb(mathcalD)\nA map on morphisms: F textHom(mathcalC) to textHom(mathcalD)\nPreservation of identity: F(1_A) = 1_F(A)\nPreservation of composition: F(f circ g) = F(f) circ F(g)","category":"page"},{"location":"appendix/category_theory/#Natural-Transformation","page":"Category Theory Appendix","title":"Natural Transformation","text":"","category":"section"},{"location":"appendix/category_theory/","page":"Category Theory Appendix","title":"Category Theory Appendix","text":"A natural transformation eta F to G between functors FG mathcalC to mathcalD consists of:","category":"page"},{"location":"appendix/category_theory/","page":"Category Theory Appendix","title":"Category Theory Appendix","text":"For each object A in mathcalC, a morphism eta_A F(A) to G(A)\nFor each morphism f A to B, the following diagram commutes:\nF(A) ---> G(A)\n |         |\n |         |\n v         v\nF(B) ---> G(B)","category":"page"},{"location":"appendix/category_theory/#Advanced-Concepts","page":"Category Theory Appendix","title":"Advanced Concepts","text":"","category":"section"},{"location":"appendix/category_theory/#Limits-and-Colimits","page":"Category Theory Appendix","title":"Limits and Colimits","text":"","category":"section"},{"location":"appendix/category_theory/","page":"Category Theory Appendix","title":"Category Theory Appendix","text":"A limit of a diagram D mathcalJ to mathcalC is a universal cone over D. A colimit of D is a universal cocone under D.","category":"page"},{"location":"appendix/category_theory/#Adjoint-Functors","page":"Category Theory Appendix","title":"Adjoint Functors","text":"","category":"section"},{"location":"appendix/category_theory/","page":"Category Theory Appendix","title":"Category Theory Appendix","text":"Functors F mathcalC to mathcalD and G mathcalD to mathcalC form an adjunction if there is a natural isomorphism: [ \\text{Hom}{\\mathcal{D}}(F(A), B) \\cong \\text{Hom}{\\mathcal{C}}(A, G(B)) ]","category":"page"},{"location":"appendix/category_theory/#Applications-in-MES","page":"Category Theory Appendix","title":"Applications in MES","text":"","category":"section"},{"location":"appendix/category_theory/","page":"Category Theory Appendix","title":"Category Theory Appendix","text":"These concepts are used in MES to model:","category":"page"},{"location":"appendix/category_theory/","page":"Category Theory Appendix","title":"Category Theory Appendix","text":"System components and their relationships\nHierarchical structures\nEvolution and transformation\nMemory and state management","category":"page"},{"location":"appendix/category_theory/","page":"Category Theory Appendix","title":"Category Theory Appendix","text":"For more information about how these concepts are implemented in MES, refer to:","category":"page"},{"location":"appendix/category_theory/","page":"Category Theory Appendix","title":"Category Theory Appendix","text":"Categories\nPatterns\nMemory Systems ","category":"page"},{"location":"papers/mes/mes-summary/","page":"Memory Evolutive Systems - Categorical Concepts Summary","title":"Memory Evolutive Systems - Categorical Concepts Summary","text":"Here is a structured Markdown summary of the chapters from Memory Evolutive Systems focusing on the main categorical concepts used. It includes only the numbered sections with their key categorical constructions.","category":"page"},{"location":"papers/mes/mes-summary/","page":"Memory Evolutive Systems - Categorical Concepts Summary","title":"Memory Evolutive Systems - Categorical Concepts Summary","text":"","category":"page"},{"location":"papers/mes/mes-summary/#Memory-Evolutive-Systems-Categorical-Concepts-Summary","page":"Memory Evolutive Systems - Categorical Concepts Summary","title":"Memory Evolutive Systems - Categorical Concepts Summary","text":"","category":"section"},{"location":"papers/mes/mes-summary/#Part-A:-Hierarchy-and-Emergence","page":"Memory Evolutive Systems - Categorical Concepts Summary","title":"Part A: Hierarchy and Emergence","text":"","category":"section"},{"location":"papers/mes/mes-summary/#Chapter-1:-Nets-of-Interactions-and-Categories","page":"Memory Evolutive Systems - Categorical Concepts Summary","title":"Chapter 1: Nets of Interactions and Categories","text":"","category":"section"},{"location":"papers/mes/mes-summary/","page":"Memory Evolutive Systems - Categorical Concepts Summary","title":"Memory Evolutive Systems - Categorical Concepts Summary","text":"Systems Theory and Graphs\nObjects and relations as a foundational concept\nDefinition of a graph and its supplementary properties\nCategories and Functors\nDefinition of a category\nCompositional structure of categories\nFunctors as mappings between categories\nCategories in Systems Theory\nConfiguration categories for systems\nMathematical examples of categories\nCategory Construction\nCategories built via generators and relations\nLabelled categories and concrete examples","category":"page"},{"location":"papers/mes/mes-summary/#Chapter-2:-The-Binding-Problem","page":"Memory Evolutive Systems - Categorical Concepts Summary","title":"Chapter 2: The Binding Problem","text":"","category":"section"},{"location":"papers/mes/mes-summary/","page":"Memory Evolutive Systems - Categorical Concepts Summary","title":"Memory Evolutive Systems - Categorical Concepts Summary","text":"Patterns and Collective Links\nConcept of patterns in categories\nCollective links binding patterns\nColimits in Categories\nMathematical concept of colimits\nBinding as colimit formation\nComparison Between Integration and Juxtaposition\nSum vs. colimit\nExamples in mathematical and real-world settings","category":"page"},{"location":"papers/mes/mes-summary/#Chapter-3:-Hierarchy-and-Reductionism","page":"Memory Evolutive Systems - Categorical Concepts Summary","title":"Chapter 3: Hierarchy and Reductionism","text":"","category":"section"},{"location":"papers/mes/mes-summary/","page":"Memory Evolutive Systems - Categorical Concepts Summary","title":"Memory Evolutive Systems - Categorical Concepts Summary","text":"Linking Towards Complex Objects\nPerspectives and mediated links\nInteractions Between Patterns\nCluster composition and simple links\nMultiplicity Principle\nDefinition and implications in complexity\nHierarchical Categories\nStructuring objects in levels\nComplexity order and reductionism","category":"page"},{"location":"papers/mes/mes-summary/#Chapter-4:-Complexification-and-Emergence","page":"Memory Evolutive Systems - Categorical Concepts Summary","title":"Chapter 4: Complexification and Emergence","text":"","category":"section"},{"location":"papers/mes/mes-summary/","page":"Memory Evolutive Systems - Categorical Concepts Summary","title":"Memory Evolutive Systems - Categorical Concepts Summary","text":"Transformations in Categories\nFunctorial images of patterns\nComplexifications\nCategories with structured options\nFormal construction of emergent complexity\nEmergence in Hierarchies\nSuccessive complexifications\nCategorical perspectives on emergentist reductionism","category":"page"},{"location":"papers/mes/mes-summary/","page":"Memory Evolutive Systems - Categorical Concepts Summary","title":"Memory Evolutive Systems - Categorical Concepts Summary","text":"","category":"page"},{"location":"papers/mes/mes-summary/#Part-B:-Memory-Evolutive-Systems","page":"Memory Evolutive Systems - Categorical Concepts Summary","title":"Part B: Memory Evolutive Systems","text":"","category":"section"},{"location":"papers/mes/mes-summary/#Chapter-5:-Evolutive-Systems","page":"Memory Evolutive Systems - Categorical Concepts Summary","title":"Chapter 5: Evolutive Systems","text":"","category":"section"},{"location":"papers/mes/mes-summary/","page":"Memory Evolutive Systems - Categorical Concepts Summary","title":"Memory Evolutive Systems - Categorical Concepts Summary","text":"Category-Based Modelling of Evolution\nCategories as system snapshots\nFunctorial changes in system configurations","category":"page"},{"location":"papers/mes/mes-summary/#Chapter-6:-Memory-Evolutive-Systems","page":"Memory Evolutive Systems - Categorical Concepts Summary","title":"Chapter 6: Memory Evolutive Systems","text":"","category":"section"},{"location":"papers/mes/mes-summary/","page":"Memory Evolutive Systems - Categorical Concepts Summary","title":"Memory Evolutive Systems - Categorical Concepts Summary","text":"Co-Regulators and Memory\nFunctorial dynamics of system change\nGlobal interplay among local procedures","category":"page"},{"location":"papers/mes/mes-summary/#Chapter-7:-Dialectics-and-Synchronization","page":"Memory Evolutive Systems - Categorical Concepts Summary","title":"Chapter 7: Dialectics and Synchronization","text":"","category":"section"},{"location":"papers/mes/mes-summary/","page":"Memory Evolutive Systems - Categorical Concepts Summary","title":"Memory Evolutive Systems - Categorical Concepts Summary","text":"Competition Between Co-Regulators\nFunctorial cascades of fractures and resynchronization","category":"page"},{"location":"papers/mes/mes-summary/#Chapter-8:-Flexible-Memory-and-Classification","page":"Memory Evolutive Systems - Categorical Concepts Summary","title":"Chapter 8: Flexible Memory and Classification","text":"","category":"section"},{"location":"papers/mes/mes-summary/","page":"Memory Evolutive Systems - Categorical Concepts Summary","title":"Memory Evolutive Systems - Categorical Concepts Summary","text":"Procedural and Semantic Memory\nInvariant classification using categorical methods","category":"page"},{"location":"papers/mes/mes-summary/","page":"Memory Evolutive Systems - Categorical Concepts Summary","title":"Memory Evolutive Systems - Categorical Concepts Summary","text":"","category":"page"},{"location":"papers/mes/mes-summary/#Part-C:-Application-to-Cognition-and-Consciousness","page":"Memory Evolutive Systems - Categorical Concepts Summary","title":"Part C: Application to Cognition and Consciousness","text":"","category":"section"},{"location":"papers/mes/mes-summary/#Chapter-9:-Memory-Evolutive-Neural-Systems-(MENS)","page":"Memory Evolutive Systems - Categorical Concepts Summary","title":"Chapter 9: Memory Evolutive Neural Systems (MENS)","text":"","category":"section"},{"location":"papers/mes/mes-summary/","page":"Memory Evolutive Systems - Categorical Concepts Summary","title":"Memory Evolutive Systems - Categorical Concepts Summary","text":"Category-Theoretic Modelling of Cognition\nFunctorial construction of mental object hierarchies","category":"page"},{"location":"papers/mes/mes-summary/#Chapter-10:-Consciousness-and-the-Archetypal-Core","page":"Memory Evolutive Systems - Categorical Concepts Summary","title":"Chapter 10: Consciousness and the Archetypal Core","text":"","category":"section"},{"location":"papers/mes/mes-summary/","page":"Memory Evolutive Systems - Categorical Concepts Summary","title":"Memory Evolutive Systems - Categorical Concepts Summary","text":"Formation of Personal Memory\nCategory-based classification of experiences","category":"page"},{"location":"papers/mes/mes-summary/","page":"Memory Evolutive Systems - Categorical Concepts Summary","title":"Memory Evolutive Systems - Categorical Concepts Summary","text":"","category":"page"},{"location":"papers/mes/mes-summary/#Appendix","page":"Memory Evolutive Systems - Categorical Concepts Summary","title":"Appendix","text":"","category":"section"},{"location":"papers/mes/mes-summary/","page":"Memory Evolutive Systems - Categorical Concepts Summary","title":"Memory Evolutive Systems - Categorical Concepts Summary","text":"Generalizations of Colimits\nMulti-colimits and local colimits\nPossible extensions using hyperstructures","category":"page"},{"location":"papers/mes/mes-summary/","page":"Memory Evolutive Systems - Categorical Concepts Summary","title":"Memory Evolutive Systems - Categorical Concepts Summary","text":"","category":"page"},{"location":"papers/mes/mes-summary/","page":"Memory Evolutive Systems - Categorical Concepts Summary","title":"Memory Evolutive Systems - Categorical Concepts Summary","text":"This Markdown file outlines only the categorical constructs used in the book, without formulas or explanations. If needed, we can create separate LaTeX files to detail the mathematical formulas in each chapter. Let me know how you'd like to proceed!","category":"page"},{"location":"getting_started/installation/#Installation","page":"Installation","title":"Installation","text":"","category":"section"},{"location":"getting_started/installation/","page":"Installation","title":"Installation","text":"MES is a Julia package for modeling economic and monetary systems using category theory. Here's how to get started:","category":"page"},{"location":"getting_started/installation/#Prerequisites","page":"Installation","title":"Prerequisites","text":"","category":"section"},{"location":"getting_started/installation/","page":"Installation","title":"Installation","text":"Julia 1.9 or later\nA working internet connection","category":"page"},{"location":"getting_started/installation/#Installing-MES","page":"Installation","title":"Installing MES","text":"","category":"section"},{"location":"getting_started/installation/","page":"Installation","title":"Installation","text":"To install MES, start Julia and use the package manager:","category":"page"},{"location":"getting_started/installation/","page":"Installation","title":"Installation","text":"using Pkg\nadd MES","category":"page"},{"location":"getting_started/installation/#Verifying-Installation","page":"Installation","title":"Verifying Installation","text":"","category":"section"},{"location":"getting_started/installation/","page":"Installation","title":"Installation","text":"To verify that MES is installed correctly, try:","category":"page"},{"location":"getting_started/installation/","page":"Installation","title":"Installation","text":"using MES","category":"page"},{"location":"getting_started/installation/","page":"Installation","title":"Installation","text":"If no error messages appear, the installation was successful.","category":"page"},{"location":"getting_started/installation/#Next-Steps","page":"Installation","title":"Next Steps","text":"","category":"section"},{"location":"getting_started/installation/","page":"Installation","title":"Installation","text":"Check out the Basic Usage guide to get started\nExplore the Examples section\nLearn about the underlying Theory\nBrowse the API Reference ","category":"page"},{"location":"api/#API-Reference","page":"API Reference","title":"API Reference","text":"","category":"section"},{"location":"api/","page":"API Reference","title":"API Reference","text":"This section provides detailed documentation for the MES API.","category":"page"},{"location":"api/#Core-Types","page":"API Reference","title":"Core Types","text":"","category":"section"},{"location":"api/","page":"API Reference","title":"API Reference","text":"MES.Category\nMES.Pattern","category":"page"},{"location":"api/#MES.Category","page":"API Reference","title":"MES.Category","text":"Category{T}\n\nA type representing a category in category theory.\n\nFields\n\nobjects::Vector{T}: The objects in the category\nmorphisms::Dict{Tuple{T,T},Vector{T}}: Maps pairs of objects to their morphisms\ncomposition::Dict{Tuple{T,T,T},Bool}: Maps triples of objects to composed morphisms\n\n\n\n\n\n","category":"type"},{"location":"api/#MES.Pattern","page":"API Reference","title":"MES.Pattern","text":"Pattern\n\nA type representing a pattern in a category.\n\nFields\n\ncategory::Category: The category containing the pattern\nobjects::Vector{String}: The objects in the pattern\nlinks::Vector{Tuple{String,String}}: The morphisms between objects in the pattern\n\n\n\n\n\n","category":"type"},{"location":"api/#Functions","page":"API Reference","title":"Functions","text":"","category":"section"},{"location":"api/","page":"API Reference","title":"API Reference","text":"MES.create_category\nMES.add_morphism!\nMES.create_pattern\nMES.calculate_colimit","category":"page"},{"location":"api/#MES.create_category","page":"API Reference","title":"MES.create_category","text":"create_category(objects::Vector{T}, morphisms::Dict{Tuple{T,T},Vector{T}}) where T\n\nCreate a category with the given objects and morphisms.\n\nArguments\n\nobjects::Vector{T}: A vector of objects in the category\nmorphisms::Dict{Tuple{T,T},Vector{T}}: A dictionary mapping pairs of objects to their morphisms\n\nReturns\n\nA Category struct representing the category.\n\nExamples\n\nobjects = [\"A\", \"B\", \"C\"]\nmorphisms = Dict(\n    (\"A\", \"B\") => [\"f\"],\n    (\"B\", \"C\") => [\"g\"]\n)\ncategory = create_category(objects, morphisms)\n\n\n\n\n\n","category":"function"},{"location":"api/#MES.add_morphism!","page":"API Reference","title":"MES.add_morphism!","text":"add_morphism!(category::Category{T}, source::T, target::T, morphism::T) where T\n\nAdd a morphism to a category.\n\nArguments\n\ncategory::Category{T}: The category to modify\nsource::T: The source object\ntarget::T: The target object\nmorphism::T: The morphism to add\n\nExamples\n\ncategory = create_category([\"A\", \"B\"], Dict())\nadd_morphism!(category, \"A\", \"B\", \"f\")\n\n\n\n\n\n","category":"function"},{"location":"api/#MES.create_pattern","page":"API Reference","title":"MES.create_pattern","text":"create_pattern(category::Category, objects::Vector{String}, links::Vector{Tuple{String,String}})\n\nCreate a pattern in a category.\n\nArguments\n\ncategory::Category: The category containing the pattern\nobjects::Vector{String}: The objects in the pattern\nlinks::Vector{Tuple{String,String}}: The morphisms between objects in the pattern\n\nReturns\n\nA Pattern struct representing the pattern.\n\nExamples\n\ncategory = create_category([\"A\", \"B\", \"C\"], Dict())\npattern = create_pattern(category, [\"A\", \"B\"], [(\"A\", \"B\")])\n\n\n\n\n\n","category":"function"},{"location":"api/#MES.calculate_colimit","page":"API Reference","title":"MES.calculate_colimit","text":"calculate_colimit(pattern::Pattern)\n\nCalculate the colimit of a pattern in a category.\n\nArguments\n\npattern::Pattern: The pattern to calculate the colimit for\n\nReturns\n\nA dictionary containing the colimit object and the morphisms from the pattern objects to the colimit.\n\nExamples\n\ncategory = create_category([\"A\", \"B\", \"C\"], Dict())\npattern = create_pattern(category, [\"A\", \"B\"], [(\"A\", \"B\")])\ncolimit = calculate_colimit(pattern)\n\n\n\n\n\n","category":"function"},{"location":"api/#Other-Functions","page":"API Reference","title":"Other Functions","text":"","category":"section"},{"location":"api/","page":"API Reference","title":"API Reference","text":"Modules = [MES]\nOrder   = [:function]\nFilter = t -> t != :create_category && t != :add_morphism! && t != :create_pattern && t != :calculate_colimit","category":"page"},{"location":"api/#MES.add_morphism!-Union{Tuple{T}, Tuple{Category{T}, T, T, T}} where T","page":"API Reference","title":"MES.add_morphism!","text":"add_morphism!(category::Category{T}, source::T, target::T, morphism::T) where T\n\nAdd a morphism to a category.\n\nArguments\n\ncategory::Category{T}: The category to modify\nsource::T: The source object\ntarget::T: The target object\nmorphism::T: The morphism to add\n\nExamples\n\ncategory = create_category([\"A\", \"B\"], Dict())\nadd_morphism!(category, \"A\", \"B\", \"f\")\n\n\n\n\n\n","category":"method"},{"location":"api/#MES.calculate_colimit-Tuple{Pattern}","page":"API Reference","title":"MES.calculate_colimit","text":"calculate_colimit(pattern::Pattern)\n\nCalculate the colimit of a pattern in a category.\n\nArguments\n\npattern::Pattern: The pattern to calculate the colimit for\n\nReturns\n\nA dictionary containing the colimit object and the morphisms from the pattern objects to the colimit.\n\nExamples\n\ncategory = create_category([\"A\", \"B\", \"C\"], Dict())\npattern = create_pattern(category, [\"A\", \"B\"], [(\"A\", \"B\")])\ncolimit = calculate_colimit(pattern)\n\n\n\n\n\n","category":"method"},{"location":"api/#MES.compose_morphisms!-Union{Tuple{T}, Tuple{Category{T}, T, T, T}} where T","page":"API Reference","title":"MES.compose_morphisms!","text":"compose_morphisms!(category::Category{T}, f::T, g::T, result::T) where T\n\nAdd a composition rule to the category.\n\nArguments\n\ncategory::Category{T}: The category to modify\nf::T: The first morphism\ng::T: The second morphism\nresult::T: The composed morphism\n\nExamples\n\ncategory = create_category([\"A\", \"B\", \"C\"], Dict())\nadd_morphism!(category, \"A\", \"B\", \"f\")\nadd_morphism!(category, \"B\", \"C\", \"g\")\ncompose_morphisms!(category, \"f\", \"g\", \"h\")\n\n\n\n\n\n","category":"method"},{"location":"api/#MES.create_category-Union{Tuple{T}, Tuple{Vector{T}, Dict{Tuple{T, T}, Vector{T}}}} where T","page":"API Reference","title":"MES.create_category","text":"create_category(objects::Vector{T}, morphisms::Dict{Tuple{T,T},Vector{T}}) where T\n\nCreate a category with the given objects and morphisms.\n\nArguments\n\nobjects::Vector{T}: A vector of objects in the category\nmorphisms::Dict{Tuple{T,T},Vector{T}}: A dictionary mapping pairs of objects to their morphisms\n\nReturns\n\nA Category struct representing the category.\n\nExamples\n\nobjects = [\"A\", \"B\", \"C\"]\nmorphisms = Dict(\n    (\"A\", \"B\") => [\"f\"],\n    (\"B\", \"C\") => [\"g\"]\n)\ncategory = create_category(objects, morphisms)\n\n\n\n\n\n","category":"method"},{"location":"api/#MES.create_pattern-Tuple{Category, Vector{String}, Vector{Tuple{String, String}}}","page":"API Reference","title":"MES.create_pattern","text":"create_pattern(category::Category, objects::Vector{String}, links::Vector{Tuple{String,String}})\n\nCreate a pattern in a category.\n\nArguments\n\ncategory::Category: The category containing the pattern\nobjects::Vector{String}: The objects in the pattern\nlinks::Vector{Tuple{String,String}}: The morphisms between objects in the pattern\n\nReturns\n\nA Pattern struct representing the pattern.\n\nExamples\n\ncategory = create_category([\"A\", \"B\", \"C\"], Dict())\npattern = create_pattern(category, [\"A\", \"B\"], [(\"A\", \"B\")])\n\n\n\n\n\n","category":"method"},{"location":"examples/momat/#MOMAT-Examples","page":"MOMAT Examples","title":"MOMAT Examples","text":"","category":"section"},{"location":"examples/momat/","page":"MOMAT Examples","title":"MOMAT Examples","text":"This section contains examples of using MES for Monetary Macro Accounting (MOMAT) modeling. These examples demonstrate how to apply the Memory Evolutive Systems framework to model monetary and financial systems.","category":"page"},{"location":"examples/momat/#Basic-Examples","page":"MOMAT Examples","title":"Basic Examples","text":"","category":"section"},{"location":"examples/momat/","page":"MOMAT Examples","title":"MOMAT Examples","text":"Simple Monetary Circuit - Basic example of modeling a simple monetary circuit\nBank Balance Sheets - Modeling bank balance sheets and their evolution\nPayment Systems - Modeling payment system interactions","category":"page"},{"location":"examples/momat/#Advanced-Examples","page":"MOMAT Examples","title":"Advanced Examples","text":"","category":"section"},{"location":"examples/momat/","page":"MOMAT Examples","title":"MOMAT Examples","text":"Complex Financial Networks - Modeling complex financial networks with multiple banks\nSystemic Risk Analysis - Analyzing systemic risk in financial networks\nMonetary Policy Effects - Modeling the effects of monetary policy","category":"page"},{"location":"examples/momat/#Theory","page":"MOMAT Examples","title":"Theory","text":"","category":"section"},{"location":"examples/momat/","page":"MOMAT Examples","title":"MOMAT Examples","text":"The MOMAT examples are based on the following theoretical foundations:","category":"page"},{"location":"examples/momat/","page":"MOMAT Examples","title":"MOMAT Examples","text":"Monetary Circuit Theory\nBank money creation\nPayment system dynamics\nBalance sheet constraints\nNetwork Theory\nInterbank networks\nPayment flows\nSystemic risk\nMemory Systems\nFinancial memory\nCredit history\nMarket expectations","category":"page"},{"location":"examples/momat/#References","page":"MOMAT Examples","title":"References","text":"","category":"section"},{"location":"examples/momat/","page":"MOMAT Examples","title":"MOMAT Examples","text":"For more information on the theoretical foundations, see:","category":"page"},{"location":"examples/momat/","page":"MOMAT Examples","title":"MOMAT Examples","text":"Memory Evolutive Systems Book\nMES 2023 Paper ","category":"page"},{"location":"theory/#Theory","page":"Overview","title":"Theory","text":"","category":"section"},{"location":"theory/","page":"Overview","title":"Overview","text":"This section covers the mathematical foundations of MES.","category":"page"},{"location":"theory/#Categories","page":"Overview","title":"Categories","text":"","category":"section"},{"location":"theory/","page":"Overview","title":"Overview","text":"A category consists of objects and morphisms between them, satisfying certain properties.","category":"page"},{"location":"theory/","page":"Overview","title":"Overview","text":"In MES, categories are represented by the Category type:","category":"page"},{"location":"theory/","page":"Overview","title":"Overview","text":"struct Category\n    objects::Vector{String}\n    morphisms::Vector{Tuple{String, String, String}}  # (source, target, name)\nend","category":"page"},{"location":"theory/#Basic-Operations","page":"Overview","title":"Basic Operations","text":"","category":"section"},{"location":"theory/","page":"Overview","title":"Overview","text":"# Create a category\ncat = create_category([\n    (\"A\", \"B\", \"f\"),\n    (\"B\", \"C\", \"g\")\n])\n\n# Verify category properties\nis_valid = verify_category(cat)","category":"page"},{"location":"theory/#Mathematical-Definition","page":"Overview","title":"Mathematical Definition","text":"","category":"section"},{"location":"theory/","page":"Overview","title":"Overview","text":"A category mathcalC consists of:","category":"page"},{"location":"theory/","page":"Overview","title":"Overview","text":"A collection of objects: textOb(mathcalC)\nA collection of morphisms: textHom(mathcalC)\nComposition operation: circ textHom(BC) times textHom(AB) to textHom(AC)\nIdentity morphisms: textid_A A to A","category":"page"},{"location":"theory/","page":"Overview","title":"Overview","text":"Satisfying the following axioms:","category":"page"},{"location":"theory/","page":"Overview","title":"Overview","text":"Associativity: forall f A to B g B to C h C to D (h circ g) circ f = h circ (g circ f)\nIdentity: forall f A to B f circ textid_A = f = textid_B circ f","category":"page"},{"location":"theory/#Patterns","page":"Overview","title":"Patterns","text":"","category":"section"},{"location":"theory/","page":"Overview","title":"Overview","text":"A pattern is a diagram in a category that represents a specific structure or relationship.","category":"page"},{"location":"theory/","page":"Overview","title":"Overview","text":"In MES, patterns are represented by the Pattern type:","category":"page"},{"location":"theory/","page":"Overview","title":"Overview","text":"struct Pattern\n    objects::Vector{String}\n    morphisms::Vector{Tuple{String, String, String}}\nend","category":"page"},{"location":"theory/#Pattern-Operations","page":"Overview","title":"Pattern Operations","text":"","category":"section"},{"location":"theory/","page":"Overview","title":"Overview","text":"# Create a pattern\npattern = create_pattern([\n    (\"A\", \"B\", \"f\")\n])\n\n# Calculate colimit\ncolimit = calculate_colimit(pattern)","category":"page"},{"location":"theory/#Mathematical-Definition-2","page":"Overview","title":"Mathematical Definition","text":"","category":"section"},{"location":"theory/","page":"Overview","title":"Overview","text":"A pattern P in a category mathcalC is defined as: P = O_i M_j where:","category":"page"},{"location":"theory/","page":"Overview","title":"Overview","text":"O_i\nare objects in mathcalC\nM_j\nare morphisms between these objects","category":"page"},{"location":"theory/","page":"Overview","title":"Overview","text":"The colimit of a pattern P, denoted textcolim(P), is an object C together with morphisms varphi_i O_i to C satisfying the universal property:","category":"page"},{"location":"theory/","page":"Overview","title":"Overview","text":"forall X in mathcalC forall psi_i O_i to X text such that  psi_j circ M_j = psi_i","category":"page"},{"location":"theory/","page":"Overview","title":"Overview","text":"exists psi C to X text such that  psi circ varphi_i = psi_i","category":"page"},{"location":"theory/#Memory-Systems","page":"Overview","title":"Memory Systems","text":"","category":"section"},{"location":"theory/","page":"Overview","title":"Overview","text":"Memory Evolutive Systems extend categories with memory capabilities:","category":"page"},{"location":"theory/","page":"Overview","title":"Overview","text":"# Create a memory system\nmemory = create_memory_system()\n\n# Add memory trace\nadd_memory_trace!(memory, \"event1\", \"data1\")\n\n# Retrieve memory\ndata = retrieve_memory(memory, \"event1\")","category":"page"},{"location":"theory/#Mathematical-Definition-3","page":"Overview","title":"Mathematical Definition","text":"","category":"section"},{"location":"theory/","page":"Overview","title":"Overview","text":"A Memory Evolutive System mathcalM is defined as: mathcalM = (mathcalC M mathcalP) where:","category":"page"},{"location":"theory/","page":"Overview","title":"Overview","text":"mathcalC\nis a category\nM\nis a memory system\nmathcalP\nis a set of procedures","category":"page"},{"location":"theory/","page":"Overview","title":"Overview","text":"The memory system M is a function: M T times E to D where:","category":"page"},{"location":"theory/","page":"Overview","title":"Overview","text":"T\nis the time domain\nE\nis the event space\nD\nis the data space","category":"page"},{"location":"theory/#Mathematical-Foundations","page":"Overview","title":"Mathematical Foundations","text":"","category":"section"},{"location":"theory/","page":"Overview","title":"Overview","text":"The key mathematical concepts are expressed through:","category":"page"},{"location":"theory/","page":"Overview","title":"Overview","text":"Category Axioms:","category":"page"},{"location":"theory/","page":"Overview","title":"Overview","text":"forall f A to B g B to C h C to D\n(h circ g) circ f = h circ (g circ f)","category":"page"},{"location":"theory/","page":"Overview","title":"Overview","text":"Pattern Recognition:","category":"page"},{"location":"theory/","page":"Overview","title":"Overview","text":"P = O_i M_j text where  O_i text are objects and  M_j text are morphisms","category":"page"},{"location":"theory/","page":"Overview","title":"Overview","text":"Colimit Universal Property:","category":"page"},{"location":"theory/","page":"Overview","title":"Overview","text":"forall X exists psi C to X text such that  psi circ varphi_D = textunique","category":"page"},{"location":"theory/#Next-Steps","page":"Overview","title":"Next Steps","text":"","category":"section"},{"location":"theory/","page":"Overview","title":"Overview","text":"Future implementations will include:","category":"page"},{"location":"theory/","page":"Overview","title":"Overview","text":"Functorial evolution\nComplexification process\nCo-regulators\nAdvanced pattern recognition ","category":"page"},{"location":"examples/basic_categories/#Basic-Categories","page":"Basic Categories","title":"Basic Categories","text":"","category":"section"},{"location":"examples/basic_categories/","page":"Basic Categories","title":"Basic Categories","text":"This section provides practical examples of working with categories in MES.","category":"page"},{"location":"examples/basic_categories/#Example-Usage","page":"Basic Categories","title":"Example Usage","text":"","category":"section"},{"location":"examples/basic_categories/","page":"Basic Categories","title":"Basic Categories","text":"using MES","category":"page"},{"location":"examples/basic_categories/#Creating-a-Simple-Category","page":"Basic Categories","title":"Creating a Simple Category","text":"","category":"section"},{"location":"examples/basic_categories/","page":"Basic Categories","title":"Basic Categories","text":"# Define objects and morphisms\nobjects = [\"A\", \"B\", \"C\"]\nmorphisms = Dict(\n    \"f\" => (\"A\", \"B\"),\n    \"g\" => (\"B\", \"C\")\n)\n\n# Create the category\ncategory = create_category(objects, morphisms)","category":"page"},{"location":"examples/basic_categories/#Working-with-Patterns","page":"Basic Categories","title":"Working with Patterns","text":"","category":"section"},{"location":"examples/basic_categories/","page":"Basic Categories","title":"Basic Categories","text":"# Create a pattern from the category\npattern_objects = [\"A\", \"B\"]\npattern_links = [(\"A\", \"B\")]\npattern = create_pattern(category, pattern_objects, pattern_links)\n\n# Calculate the colimit\ncolimit = calculate_colimit(pattern)","category":"page"},{"location":"examples/basic_categories/#Next-Steps","page":"Basic Categories","title":"Next Steps","text":"","category":"section"},{"location":"examples/basic_categories/","page":"Basic Categories","title":"Basic Categories","text":"Check out the Bill of Exchange example for a more complex application. ","category":"page"},{"location":"examples/memory/#Memory-Systems","page":"Memory Systems","title":"Memory Systems","text":"","category":"section"},{"location":"examples/memory/","page":"Memory Systems","title":"Memory Systems","text":"This page demonstrates how to work with memory systems in MES.","category":"page"},{"location":"examples/memory/#Basic-Memory-Operations","page":"Memory Systems","title":"Basic Memory Operations","text":"","category":"section"},{"location":"examples/memory/","page":"Memory Systems","title":"Memory Systems","text":"using MES\n\n# Create a memory component\nmemory = create_memory_component(\n    capacity=100,\n    decay_rate=0.1\n)\n\n# Store some patterns\nstore_pattern!(memory, [\"A\", \"B\", \"C\"], 0.9)\nstore_pattern!(memory, [\"B\", \"C\", \"D\"], 0.8)\n\n# Retrieve patterns\nretrieved = retrieve_pattern(memory, [\"A\", \"B\", \"C\"])","category":"page"},{"location":"examples/memory/#Memory-Decay","page":"Memory Systems","title":"Memory Decay","text":"","category":"section"},{"location":"examples/memory/","page":"Memory Systems","title":"Memory Systems","text":"# Create a memory with decay\nmemory = create_memory_component(\n    capacity=5,\n    decay_rate=0.2\n)\n\n# Store patterns at different times\nstore_pattern!(memory, [\"X\", \"Y\"], 1.0, Dates.now())\nstore_pattern!(memory, [\"Y\", \"Z\"], 0.9, Dates.now() - Dates.Second(10))\n\n# Simulate decay\ndecay_memory!(memory)","category":"page"},{"location":"examples/memory/#Memory-Consolidation","page":"Memory Systems","title":"Memory Consolidation","text":"","category":"section"},{"location":"examples/memory/","page":"Memory Systems","title":"Memory Systems","text":"# Create short-term and long-term memory\nstm = create_memory_component(5, 0.3)  # higher decay rate\nltm = create_memory_component(20, 0.05)  # lower decay rate\n\n# Store in STM\nstore_pattern!(stm, [\"A\", \"B\"], 0.9)\nstore_pattern!(stm, [\"B\", \"C\"], 0.85)\n\n# Consolidate to LTM\nconsolidate_memory!(stm, ltm, 0.8)  # threshold 0.8","category":"page"},{"location":"examples/memory/#Pattern-Completion","page":"Memory Systems","title":"Pattern Completion","text":"","category":"section"},{"location":"examples/memory/","page":"Memory Systems","title":"Memory Systems","text":"# Create a completion system\nsystem = create_completion_system(0.6)  # completion threshold\n\n# Add known patterns\nadd_known_pattern!(system, [\"1\", \"2\", \"3\", \"4\"], 1.0)\nadd_known_pattern!(system, [\"2\", \"3\", \"4\", \"5\"], 1.0)\n\n# Try to complete partial pattern\npartial = create_pattern([\"1\", \"2\"], 0.9)\ncompleted = complete_pattern(system, partial)","category":"page"},{"location":"examples/memory/","page":"Memory Systems","title":"Memory Systems","text":"","category":"page"},{"location":"getting_started/quickstart/#Quick-Start-Guide","page":"Getting Started","title":"Quick Start Guide","text":"","category":"section"},{"location":"getting_started/quickstart/","page":"Getting Started","title":"Getting Started","text":"This guide will help you get started with the MES package quickly.","category":"page"},{"location":"getting_started/quickstart/#Installation","page":"Getting Started","title":"Installation","text":"","category":"section"},{"location":"getting_started/quickstart/","page":"Getting Started","title":"Getting Started","text":"using Pkg\nPkg.add(\"MES\")","category":"page"},{"location":"getting_started/quickstart/#Basic-Usage","page":"Getting Started","title":"Basic Usage","text":"","category":"section"},{"location":"getting_started/quickstart/#Creating-a-Simple-Category","page":"Getting Started","title":"Creating a Simple Category","text":"","category":"section"},{"location":"getting_started/quickstart/","page":"Getting Started","title":"Getting Started","text":"using MES\n\n# Create a simple category with objects and morphisms\ncat = create_category([\n    (\"A\", \"B\", \"f\"),\n    (\"B\", \"C\", \"g\")\n])\n\n# View the category structure\nprintln(cat)","category":"page"},{"location":"getting_started/quickstart/#Working-with-Patterns","page":"Getting Started","title":"Working with Patterns","text":"","category":"section"},{"location":"getting_started/quickstart/","page":"Getting Started","title":"Getting Started","text":"# Create a pattern in the category\npattern = create_pattern([\n    (\"A\", \"B\", \"f\")\n])\n\n# Calculate the colimit of the pattern\ncolimit = calculate_colimit(pattern)","category":"page"},{"location":"getting_started/quickstart/#Memory-Systems","page":"Getting Started","title":"Memory Systems","text":"","category":"section"},{"location":"getting_started/quickstart/","page":"Getting Started","title":"Getting Started","text":"# Create a memory system\nmemory = create_memory_system()\n\n# Add a memory trace\nadd_memory_trace!(memory, \"event1\", \"data1\")\n\n# Retrieve memory\ndata = retrieve_memory(memory, \"event1\")","category":"page"},{"location":"getting_started/quickstart/#Next-Steps","page":"Getting Started","title":"Next Steps","text":"","category":"section"},{"location":"getting_started/quickstart/","page":"Getting Started","title":"Getting Started","text":"Read the Theory Overview to understand the mathematical foundations\nExplore the Examples Overview for more complex use cases\nCheck the API Reference for detailed function documentation","category":"page"},{"location":"getting_started/quickstart/#Common-Patterns","page":"Getting Started","title":"Common Patterns","text":"","category":"section"},{"location":"getting_started/quickstart/#Creating-a-Hierarchical-System","page":"Getting Started","title":"Creating a Hierarchical System","text":"","category":"section"},{"location":"getting_started/quickstart/","page":"Getting Started","title":"Getting Started","text":"# Create a base category\nbase = create_category([\n    (\"Component1\", \"Component2\", \"interaction\")\n])\n\n# Create a higher-level category\nhigher = create_category([\n    (\"System1\", \"System2\", \"connection\")\n])\n\n# Link the categories\nlink_categories!(base, higher)","category":"page"},{"location":"getting_started/quickstart/#Working-with-Emergent-Properties","page":"Getting Started","title":"Working with Emergent Properties","text":"","category":"section"},{"location":"getting_started/quickstart/","page":"Getting Started","title":"Getting Started","text":"# Create a system with potential emergent properties\nsystem = create_system([\n    (\"Agent1\", \"Agent2\", \"interact\"),\n    (\"Agent2\", \"Agent3\", \"interact\")\n])\n\n# Analyze emergent properties\nproperties = analyze_emergence(system)","category":"page"},{"location":"getting_started/quickstart/","page":"Getting Started","title":"Getting Started","text":"","category":"page"},{"location":"examples/#Examples","page":"Overview","title":"Examples","text":"","category":"section"},{"location":"examples/","page":"Overview","title":"Overview","text":"This section provides practical examples of working with MES.","category":"page"},{"location":"examples/#Basic-Categories","page":"Overview","title":"Basic Categories","text":"","category":"section"},{"location":"examples/","page":"Overview","title":"Overview","text":"using MES\n\n# Create a simple category\ncat = create_category([\n    (\"A\", \"B\", \"f\"),\n    (\"B\", \"C\", \"g\")\n])\n\n# Verify the category\nis_valid = verify_category(cat)","category":"page"},{"location":"examples/#Working-with-Patterns","page":"Overview","title":"Working with Patterns","text":"","category":"section"},{"location":"examples/","page":"Overview","title":"Overview","text":"# Create a pattern\npattern = create_pattern([\n    (\"A\", \"B\", \"f\")\n])\n\n# Calculate the colimit\ncolimit = calculate_colimit(pattern)","category":"page"},{"location":"examples/#Memory-Systems","page":"Overview","title":"Memory Systems","text":"","category":"section"},{"location":"examples/","page":"Overview","title":"Overview","text":"# Create a memory system\nmemory = create_memory_system()\n\n# Add some memory traces\nadd_memory_trace!(memory, \"event1\", \"data1\")\nadd_memory_trace!(memory, \"event2\", \"data2\")\n\n# Retrieve memory\ndata = retrieve_memory(memory, \"event1\")","category":"page"},{"location":"examples/#Neural-Network-Example","page":"Overview","title":"Neural Network Example","text":"","category":"section"},{"location":"examples/","page":"Overview","title":"Overview","text":"# Create a category representing a simple neural network\nnetwork = create_category([\n    (\"Input\", \"Hidden\", \"weight1\"),\n    (\"Hidden\", \"Output\", \"weight2\")\n])\n\n# Create a pattern for a specific activation\nactivation = create_pattern([\n    (\"Input\", \"Hidden\", \"weight1\")\n])\n\n# Calculate the activation pattern's colimit\nactivation_result = calculate_colimit(activation)","category":"page"},{"location":"examples/#Social-Network-Example","page":"Overview","title":"Social Network Example","text":"","category":"section"},{"location":"examples/","page":"Overview","title":"Overview","text":"# Create a category representing social relationships\nsocial = create_category([\n    (\"Person1\", \"Person2\", \"knows\"),\n    (\"Person2\", \"Person3\", \"knows\")\n])\n\n# Create a pattern for a specific relationship\nrelationship = create_pattern([\n    (\"Person1\", \"Person2\", \"knows\")\n])\n\n# Calculate the relationship pattern's colimit\nrelationship_result = calculate_colimit(relationship)","category":"page"},{"location":"examples/#Next-Steps","page":"Overview","title":"Next Steps","text":"","category":"section"},{"location":"examples/","page":"Overview","title":"Overview","text":"Future examples will include:","category":"page"},{"location":"examples/","page":"Overview","title":"Overview","text":"Complex pattern recognition\nHierarchical system modeling\nAdvanced memory operations\nSystem evolution tracking ","category":"page"},{"location":"getting_started/basic_usage/#Basic-Usage","page":"Basic Usage","title":"Basic Usage","text":"","category":"section"},{"location":"getting_started/basic_usage/","page":"Basic Usage","title":"Basic Usage","text":"This guide will walk you through the basic usage of MES.","category":"page"},{"location":"getting_started/basic_usage/#Getting-Started","page":"Basic Usage","title":"Getting Started","text":"","category":"section"},{"location":"getting_started/basic_usage/","page":"Basic Usage","title":"Basic Usage","text":"using MES","category":"page"},{"location":"getting_started/basic_usage/#Creating-a-Category","page":"Basic Usage","title":"Creating a Category","text":"","category":"section"},{"location":"getting_started/basic_usage/","page":"Basic Usage","title":"Basic Usage","text":"using MES\n\n# Create a simple category with two objects and a morphism\nobjects = [\"A\", \"B\"]\nmorphisms = Dict(\n    \"f\" => (\"A\", \"B\")\n)\ncategory = create_category(objects, morphisms)","category":"page"},{"location":"getting_started/basic_usage/#Working-with-Patterns","page":"Basic Usage","title":"Working with Patterns","text":"","category":"section"},{"location":"getting_started/basic_usage/","page":"Basic Usage","title":"Basic Usage","text":"# Create a pattern from the category\npattern_objects = [\"A\", \"B\"]\npattern_links = [(\"A\", \"B\")]\npattern = create_pattern(category, pattern_objects, pattern_links)\n\n# Calculate colimit\ncolimit = calculate_colimit(pattern)","category":"page"},{"location":"getting_started/basic_usage/#Next-Steps","page":"Basic Usage","title":"Next Steps","text":"","category":"section"},{"location":"getting_started/basic_usage/","page":"Basic Usage","title":"Basic Usage","text":"For more detailed examples, check out the Examples section. ","category":"page"},{"location":"theory/categories/#Nets-of-Interactions-and-Categories","page":"Categories","title":"Nets of Interactions and Categories","text":"","category":"section"},{"location":"theory/categories/","page":"Categories","title":"Categories","text":"This chapter introduces the fundamental concepts of category theory as they apply to Memory Evolutive Systems.","category":"page"},{"location":"theory/categories/#Introduction","page":"Categories","title":"Introduction","text":"","category":"section"},{"location":"theory/categories/","page":"Categories","title":"Categories","text":"Category theory provides a powerful mathematical framework for understanding complex systems. In MES, we use categories to model:","category":"page"},{"location":"theory/categories/","page":"Categories","title":"Categories","text":"System components and their relationships\nHierarchical structures\nEvolution and transformation\nMemory and state management","category":"page"},{"location":"theory/categories/#Basic-Concepts","page":"Categories","title":"Basic Concepts","text":"","category":"section"},{"location":"theory/categories/#Objects-and-Morphisms","page":"Categories","title":"Objects and Morphisms","text":"","category":"section"},{"location":"theory/categories/","page":"Categories","title":"Categories","text":"A category consists of:","category":"page"},{"location":"theory/categories/","page":"Categories","title":"Categories","text":"Objects (vertices in a graph)\nMorphisms (arrows between objects)\nComposition rules\nIdentity morphisms","category":"page"},{"location":"theory/categories/#Implementation","page":"Categories","title":"Implementation","text":"","category":"section"},{"location":"theory/categories/","page":"Categories","title":"Categories","text":"# Create a simple category\nusing MES\n\n# Define objects and morphisms\ncat = create_category([\n    (\"A\", \"B\", \"f\"),\n    (\"B\", \"C\", \"g\")\n])\n\n# Verify category laws\nis_valid = verify_category(cat)","category":"page"},{"location":"theory/categories/#Applications","page":"Categories","title":"Applications","text":"","category":"section"},{"location":"theory/categories/","page":"Categories","title":"Categories","text":"Categories are used in various contexts:","category":"page"},{"location":"theory/categories/","page":"Categories","title":"Categories","text":"Modeling biological systems\nRepresenting neural networks\nAnalyzing social structures\nUnderstanding complex data relationships","category":"page"},{"location":"theory/categories/#Further-Reading","page":"Categories","title":"Further Reading","text":"","category":"section"},{"location":"theory/categories/","page":"Categories","title":"Categories","text":"For more detailed information about category theory in MES, refer to:","category":"page"},{"location":"theory/categories/","page":"Categories","title":"Categories","text":"Patterns - Pattern recognition and colimits\nMemory Systems - Memory and system evolution\nSynchronization - System coordination\nCategory Examples - Practical examples","category":"page"},{"location":"theory/categories/#Systems-Theory-and-Graphs","page":"Categories","title":"Systems Theory and Graphs","text":"","category":"section"},{"location":"theory/categories/","page":"Categories","title":"Categories","text":"A system can be represented as a collection of objects and their relationships. In MES, we model this using graphs and categories.","category":"page"},{"location":"theory/categories/","page":"Categories","title":"Categories","text":"# Create a simple graph representing objects and relations\nusing MES\n\n# Define objects (vertices)\nobjects = [\"Cell1\", \"Cell2\", \"Protein1\"]\n\n# Define relations (edges)\nrelations = [\n    (\"Cell1\", \"Cell2\", \"signals_to\"),\n    (\"Protein1\", \"Cell1\", \"regulates\")\n]\n\n# Create the graph\ngraph = create_graph(objects, relations)","category":"page"},{"location":"theory/categories/#Categories-and-Functors","page":"Categories","title":"Categories and Functors","text":"","category":"section"},{"location":"theory/categories/","page":"Categories","title":"Categories","text":"A category extends the concept of a graph by adding:","category":"page"},{"location":"theory/categories/","page":"Categories","title":"Categories","text":"Identity morphisms for each object\nComposition of morphisms\nAssociativity and unit laws","category":"page"},{"location":"theory/categories/","page":"Categories","title":"Categories","text":"# Create a category from the graph\ncategory = create_category(graph)\n\n# Add a composition rule\nadd_composition!(category, \"signals_to\", \"regulates\", \"indirect_regulation\")\n\n# Verify category laws\nverify_category(category)","category":"page"},{"location":"theory/categories/#Categories-in-Systems-Theory","page":"Categories","title":"Categories in Systems Theory","text":"","category":"section"},{"location":"theory/categories/","page":"Categories","title":"Categories","text":"Categories provide a powerful framework for modeling systems:","category":"page"},{"location":"theory/categories/","page":"Categories","title":"Categories","text":"Configuration Categories\n# Model a biological system's state\nconfig = configuration_category(\n    objects = [\"Cell\", \"Membrane\", \"Nucleus\"],\n    morphisms = [\"contains\", \"surrounds\"],\n    compositions = [(\"contains\", \"surrounds\", \"protects\")]\n)\nTransformations Between States\n# Model system evolution\nF = functor(\n    source = initial_state,\n    target = final_state,\n    object_map = Dict(\"Cell\" => \"DividedCell\"),\n    morphism_map = Dict(\"contains\" => \"contains_both\")\n)","category":"page"},{"location":"theory/categories/#Category-Construction","page":"Categories","title":"Category Construction","text":"","category":"section"},{"location":"theory/categories/","page":"Categories","title":"Categories","text":"Categories can be built in several ways:","category":"page"},{"location":"theory/categories/","page":"Categories","title":"Categories","text":"Via Generators and Relations\n# Define basic generators\ngenerators = category_generators(\n    objects = [\"A\", \"B\", \"C\"],\n    basic_morphisms = [\"f: A→B\", \"g: B→C\"]\n)\n\n# Add relations\nadd_relations!(generators, [\"g ∘ f = h\"])\nLabelled Categories\n# Create a category with labeled morphisms\nlabeled_cat = labeled_category(\n    objects = [\"Neuron1\", \"Neuron2\"],\n    labels = [\"excitatory\", \"inhibitory\"],\n    morphisms = [\n        (\"Neuron1\", \"Neuron2\", \"excitatory\"),\n        (\"Neuron2\", \"Neuron1\", \"inhibitory\")\n    ]\n)","category":"page"},{"location":"theory/categories/#Implementation-Details","page":"Categories","title":"Implementation Details","text":"","category":"section"},{"location":"theory/categories/","page":"Categories","title":"Categories","text":"The MES package provides several types and functions for working with categories:","category":"page"},{"location":"theory/categories/","page":"Categories","title":"Categories","text":"# Basic category type\nstruct Category{T}\n    objects::Set{T}\n    morphisms::Dict{Tuple{T,T}, Set{String}}\n    compositions::Dict{Tuple{String,String}, String}\nend\n\n# Create a category\nfunction create_category(\n    objects::Vector{T}, \n    morphisms::Vector{Tuple{T,T,String}}\n) where T\n    # Implementation...\nend\n\n# Verify category laws\nfunction verify_category(cat::Category)\n    # Check identity morphisms\n    # Check composition closure\n    # Check associativity\n    # Check identity laws\nend","category":"page"},{"location":"theory/categories/#Mathematical-Background","page":"Categories","title":"Mathematical Background","text":"","category":"section"},{"location":"theory/categories/","page":"Categories","title":"Categories","text":"For the mathematical foundations of categories, including formal definitions and proofs, see the Category Theory Appendix.","category":"page"},{"location":"theory/categories/#Examples","page":"Categories","title":"Examples","text":"","category":"section"},{"location":"theory/categories/","page":"Categories","title":"Categories","text":"See the Category Examples section for more practical applications, including:","category":"page"},{"location":"theory/categories/","page":"Categories","title":"Categories","text":"Biological system modeling\nNeural network representation\nSocial network analysis ","category":"page"},{"location":"theory/memory_systems/#Memory-Systems","page":"Memory Systems","title":"Memory Systems","text":"","category":"section"},{"location":"theory/memory_systems/","page":"Memory Systems","title":"Memory Systems","text":"This chapter explores the concept of memory systems in Memory Evolutive Systems.","category":"page"},{"location":"theory/memory_systems/#Introduction","page":"Memory Systems","title":"Introduction","text":"","category":"section"},{"location":"theory/memory_systems/","page":"Memory Systems","title":"Memory Systems","text":"Memory systems are fundamental components of MES that enable the storage, retrieval, and evolution of information over time. They form the basis for understanding how systems maintain and adapt their structure.","category":"page"},{"location":"theory/memory_systems/#Memory-System-Components","page":"Memory Systems","title":"Memory System Components","text":"","category":"section"},{"location":"theory/memory_systems/","page":"Memory Systems","title":"Memory Systems","text":"A memory system consists of:","category":"page"},{"location":"theory/memory_systems/","page":"Memory Systems","title":"Memory Systems","text":"Storage structures for information\nRetrieval mechanisms\nEvolution rules\nSynchronization protocols","category":"page"},{"location":"theory/memory_systems/#Memory-Dynamics","page":"Memory Systems","title":"Memory Dynamics","text":"","category":"section"},{"location":"theory/memory_systems/","page":"Memory Systems","title":"Memory Systems","text":"Memory systems in MES exhibit several key characteristics:","category":"page"},{"location":"theory/memory_systems/","page":"Memory Systems","title":"Memory Systems","text":"Temporal persistence\nAdaptive evolution\nPattern recognition\nInformation integration","category":"page"},{"location":"theory/memory_systems/#Implementation","page":"Memory Systems","title":"Implementation","text":"","category":"section"},{"location":"theory/memory_systems/","page":"Memory Systems","title":"Memory Systems","text":"# Example of memory system creation and evolution\nusing MES\n\n# Create a memory system\nmemory = create_memory_system()\n\n# Add information to the memory\nadd_to_memory!(memory, \"pattern1\", pattern)\n\n# Evolve the memory system\nevolve!(memory, time_step)","category":"page"},{"location":"theory/memory_systems/#Applications","page":"Memory Systems","title":"Applications","text":"","category":"section"},{"location":"theory/memory_systems/","page":"Memory Systems","title":"Memory Systems","text":"Memory systems are used in various contexts:","category":"page"},{"location":"theory/memory_systems/","page":"Memory Systems","title":"Memory Systems","text":"Neural network modeling\nLearning systems\nAdaptive algorithms\nComplex system simulation","category":"page"},{"location":"theory/memory_systems/#Further-Reading","page":"Memory Systems","title":"Further Reading","text":"","category":"section"},{"location":"theory/memory_systems/","page":"Memory Systems","title":"Memory Systems","text":"For more detailed information about memory systems in MES, refer to the original papers in the Papers section. ","category":"page"},{"location":"theory/patterns/#Patterns-and-Colimits","page":"Patterns","title":"Patterns and Colimits","text":"","category":"section"},{"location":"theory/patterns/","page":"Patterns","title":"Patterns","text":"This chapter covers the fundamental concepts of patterns and colimits in Memory Evolutive Systems.","category":"page"},{"location":"theory/patterns/#Introduction","page":"Patterns","title":"Introduction","text":"","category":"section"},{"location":"theory/patterns/","page":"Patterns","title":"Patterns","text":"Patterns are essential structures in MES that represent complex configurations of objects and their relationships. They form the basis for understanding how different components of a system interact and evolve.","category":"page"},{"location":"theory/patterns/#Pattern-Definition","page":"Patterns","title":"Pattern Definition","text":"","category":"section"},{"location":"theory/patterns/","page":"Patterns","title":"Patterns","text":"A pattern in MES consists of:","category":"page"},{"location":"theory/patterns/","page":"Patterns","title":"Patterns","text":"A set of objects\nMorphisms between these objects\nA configuration that represents a specific state or structure","category":"page"},{"location":"theory/patterns/#Colimits","page":"Patterns","title":"Colimits","text":"","category":"section"},{"location":"theory/patterns/","page":"Patterns","title":"Patterns","text":"Colimits are mathematical constructions that represent the \"gluing\" of patterns. They are crucial for:","category":"page"},{"location":"theory/patterns/","page":"Patterns","title":"Patterns","text":"Combining multiple patterns into a single structure\nUnderstanding how different parts of a system integrate\nModeling complex system behaviors","category":"page"},{"location":"theory/patterns/#Implementation","page":"Patterns","title":"Implementation","text":"","category":"section"},{"location":"theory/patterns/","page":"Patterns","title":"Patterns","text":"# Example of pattern creation and colimit calculation\nusing MES\n\n# Create a simple pattern\npattern = create_pattern([\n    (\"A\", \"B\", \"f\"),\n    (\"B\", \"C\", \"g\")\n])\n\n# Calculate its colimit\ncolimit = calculate_colimit(pattern)","category":"page"},{"location":"theory/patterns/#Applications","page":"Patterns","title":"Applications","text":"","category":"section"},{"location":"theory/patterns/","page":"Patterns","title":"Patterns","text":"Patterns and colimits are used in various applications:","category":"page"},{"location":"theory/patterns/","page":"Patterns","title":"Patterns","text":"Modeling biological systems\nUnderstanding neural networks\nAnalyzing social structures\nRepresenting complex data relationships","category":"page"},{"location":"theory/patterns/#Further-Reading","page":"Patterns","title":"Further Reading","text":"","category":"section"},{"location":"theory/patterns/","page":"Patterns","title":"Patterns","text":"For more detailed information about patterns and colimits in MES, refer to the original papers in the Papers section. ","category":"page"},{"location":"theory/synchronization/#Synchronization","page":"Synchronization","title":"Synchronization","text":"","category":"section"},{"location":"theory/synchronization/","page":"Synchronization","title":"Synchronization","text":"This chapter covers synchronization mechanisms in Memory Evolutive Systems.","category":"page"},{"location":"theory/synchronization/#Introduction","page":"Synchronization","title":"Introduction","text":"","category":"section"},{"location":"theory/synchronization/","page":"Synchronization","title":"Synchronization","text":"Synchronization is a crucial aspect of MES that ensures coordinated evolution of different system components. It enables the harmonious interaction between various parts of a complex system.","category":"page"},{"location":"theory/synchronization/#Synchronization-Mechanisms","page":"Synchronization","title":"Synchronization Mechanisms","text":"","category":"section"},{"location":"theory/synchronization/","page":"Synchronization","title":"Synchronization","text":"Key synchronization features include:","category":"page"},{"location":"theory/synchronization/","page":"Synchronization","title":"Synchronization","text":"Temporal coordination\nState alignment\nEvent synchronization\nResource management","category":"page"},{"location":"theory/synchronization/#Synchronization-Patterns","page":"Synchronization","title":"Synchronization Patterns","text":"","category":"section"},{"location":"theory/synchronization/","page":"Synchronization","title":"Synchronization","text":"Common synchronization patterns in MES:","category":"page"},{"location":"theory/synchronization/","page":"Synchronization","title":"Synchronization","text":"Co-regulator synchronization\nMemory system coordination\nPattern alignment\nState consistency","category":"page"},{"location":"theory/synchronization/#Implementation","page":"Synchronization","title":"Implementation","text":"","category":"section"},{"location":"theory/synchronization/","page":"Synchronization","title":"Synchronization","text":"# Example of synchronization in MES\nusing MES\n\n# Create synchronized components\ncomponent1 = create_component()\ncomponent2 = create_component()\n\n# Establish synchronization\nsync = create_synchronization(component1, component2)\n\n# Perform synchronized evolution\nevolve_synchronized!(sync, time_step)","category":"page"},{"location":"theory/synchronization/#Applications","page":"Synchronization","title":"Applications","text":"","category":"section"},{"location":"theory/synchronization/","page":"Synchronization","title":"Synchronization","text":"Synchronization is used in various contexts:","category":"page"},{"location":"theory/synchronization/","page":"Synchronization","title":"Synchronization","text":"Distributed systems\nNeural networks\nMulti-agent systems\nComplex adaptive systems","category":"page"},{"location":"theory/synchronization/#Further-Reading","page":"Synchronization","title":"Further Reading","text":"","category":"section"},{"location":"theory/synchronization/","page":"Synchronization","title":"Synchronization","text":"For more detailed information about synchronization in MES, refer to the original papers in the Papers section. ","category":"page"},{"location":"#Memory-Evolutive-Systems-(MES)","page":"Home","title":"Memory Evolutive Systems (MES)","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"A Julia package for modeling complex systems using category theory, focusing on hierarchy, emergence, and evolution.","category":"page"},{"location":"#Overview","page":"Home","title":"Overview","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Memory Evolutive Systems (MES) provide a mathematical framework for modeling complex systems that:","category":"page"},{"location":"","page":"Home","title":"Home","text":"Develop hierarchical structures\nExhibit emergent properties\nEvolve over time through interactions\nForm and utilize memory","category":"page"},{"location":"#Quick-Start","page":"Home","title":"Quick Start","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"using Pkg\nPkg.add(\"MES\")\n\nusing MES\n\n# Create a simple category\ncat = create_category([\n    (\"A\", \"B\", \"f\"),\n    (\"B\", \"C\", \"g\")\n])\n\n# Create a pattern\npattern = create_pattern([\n    (\"A\", \"B\", \"f\")\n])\n\n# Calculate a colimit\ncolimit = calculate_colimit(pattern)","category":"page"},{"location":"#Documentation-Structure","page":"Home","title":"Documentation Structure","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Getting Started - Quick setup and basic usage\nTheory Overview - Mathematical foundations and concepts\nExamples Overview - Practical examples and use cases\nAPI Reference - Detailed function documentation","category":"page"},{"location":"#Key-Features","page":"Home","title":"Key Features","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Category Theory Foundations: Implementation of categories, functors, and natural transformations\nPattern Recognition: Tools for identifying and working with patterns in complex systems\nColimit Calculations: Mechanisms for binding and integration\nHierarchical Structures: Support for multi-level system modeling\nEvolution Tracking: Tools for modeling system changes over time\nMemory Modeling: Frameworks for representing and utilizing system memory","category":"page"},{"location":"#Contributing","page":"Home","title":"Contributing","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Contributions are welcome! Please feel free to submit a Pull Request.","category":"page"},{"location":"#License","page":"Home","title":"License","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"This project is licensed under the MIT License - see the LICENSE file for details. ","category":"page"},{"location":"papers/#MES-Papers-and-References","page":"MES Papers and References","title":"MES Papers and References","text":"","category":"section"},{"location":"papers/","page":"MES Papers and References","title":"MES Papers and References","text":"This page contains references to the foundational papers and books on Memory Evolutive Systems (MES).","category":"page"},{"location":"papers/#Core-References","page":"MES Papers and References","title":"Core References","text":"","category":"section"},{"location":"papers/#Memory-Evolutive-Systems:-Hierarchy,-Emergence,-Cognition-(2007)","page":"MES Papers and References","title":"Memory Evolutive Systems: Hierarchy, Emergence, Cognition (2007)","text":"","category":"section"},{"location":"papers/","page":"MES Papers and References","title":"MES Papers and References","text":"Authors: Andrée C. Ehresmann and Jean-Paul Vanbremeersch   Publisher: Elsevier   ISBN: 978-0-444-52723-7","category":"page"},{"location":"papers/","page":"MES Papers and References","title":"MES Papers and References","text":"This seminal book introduces the mathematical framework of Memory Evolutive Systems, presenting:","category":"page"},{"location":"papers/","page":"MES Papers and References","title":"MES Papers and References","text":"The hierarchical structure of MES\nThe role of memory in system evolution\nApplications to cognitive systems\nMathematical foundations in category theory","category":"page"},{"location":"papers/","page":"MES Papers and References","title":"MES Papers and References","text":"Download PDF","category":"page"},{"location":"papers/#Memory-Evolutive-Systems:-A-Mathematical-Model-for-Cognitive-Systems-(2023)","page":"MES Papers and References","title":"Memory Evolutive Systems: A Mathematical Model for Cognitive Systems (2023)","text":"","category":"section"},{"location":"papers/","page":"MES Papers and References","title":"MES Papers and References","text":"Authors: Andrée C. Ehresmann and Jean-Paul Vanbremeersch   Journal: Journal of Mathematical Psychology   Volume: 112, 102728","category":"page"},{"location":"papers/","page":"MES Papers and References","title":"MES Papers and References","text":"This recent paper provides:","category":"page"},{"location":"papers/","page":"MES Papers and References","title":"MES Papers and References","text":"Updated mathematical foundations\nNew applications to cognitive systems\nRecent developments in MES theory\nConnections to modern neuroscience","category":"page"},{"location":"papers/","page":"MES Papers and References","title":"MES Papers and References","text":"View Paper","category":"page"},{"location":"papers/#Citing-MES","page":"MES Papers and References","title":"Citing MES","text":"","category":"section"},{"location":"papers/","page":"MES Papers and References","title":"MES Papers and References","text":"When using this package in academic work, please cite both papers:","category":"page"},{"location":"papers/","page":"MES Papers and References","title":"MES Papers and References","text":"@book{ehresmann2007memory,\n  title={Memory Evolutive Systems: Hierarchy, Emergence, Cognition},\n  author={Ehresmann, Andr{\\'e}e C. and Vanbremeersch, Jean-Paul},\n  year={2007},\n  publisher={Elsevier},\n  isbn={978-0-444-52723-7}\n}\n\n@article{ehresmann2023memory,\n  title={Memory Evolutive Systems: A Mathematical Model for Cognitive Systems},\n  author={Ehresmann, Andr{\\'e}e C. and Vanbremeersch, Jean-Paul},\n  journal={Journal of Mathematical Psychology},\n  volume={112},\n  pages={102728},\n  year={2023},\n  publisher={Elsevier}\n}","category":"page"},{"location":"papers/#Additional-Resources","page":"MES Papers and References","title":"Additional Resources","text":"","category":"section"},{"location":"papers/","page":"MES Papers and References","title":"MES Papers and References","text":"MES Research Group\nCategory Theory for Cognitive Science\nMemory Systems Research ","category":"page"}]
}
